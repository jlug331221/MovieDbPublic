#Created by Chris Helms 4/16/2016

These tests are preformed on the application using a seeded movie table,
as well as a regular user having no extra permissions, a user with comment moderating
permissions, and a user with review moderating permissions.

#####################
Req-ID: 109
Date: 4/16/2016
Status: Passed
Test: Navigating to the review creation url as a logged in user should load the review creation page.

Actions:
    1. Log in as a user.
    2. Navigate to ./reviews/create/1.
Expected:
    1. Username should appear in top menu bar.
    2. Review creation page should load.
Actual:
    1. Username appears in top menu bar.
    2. Review creation page loads.

#####################
Req-ID: 110
Date: 4/16/2016
Status: Passed
Test: The user must be logged in to create a review. If the user is not logged in, they will be redirected to the
        landing page.

Actions:
    1. Make sure user is logged out.
    2. Navigate to the create review page, using ./reviews/create/1.
Expected:
    1. Username should not appear in top menu bar.
    2. The landing page should load.
Actual:
    1. The username does not appear in the top menu bar.
    2. Upon navigating to ./reviews/create/1, the landing page is loaded.

#####################
Req-ID: 111
Date: 4/16/2016
Status: Passed
Test: This tests whether the user has the ability to enter the title, rating, and body information for a review.

Actions:
    1. Log in to a user account.
    2. Navigate to create review page for movie with id=1: ./reviews/create/1
    3. Enter in "Test" for review title, select 9 for review rating, enter "This is a review body".
Expected:
    1. Username should appear in top menu.
    2. Create review page should load.
    3. Title, rating, and body should be editable and retain their values.
Actual:
    1. username appears in top menu.
    2. Review creation page loads.
    3. Title, rating, and body are all editable/selectable, and retain values given to them.

#####################
Req-ID: 112
Date: 4/16/2016
Status: Passed
Test: Tests that a review can be created in the database by clicking submit on the review creation page with all
        review information filled out.

Actions:
    1. Assure user is logged in. User has id=1.
    2. Navigate to create review page for movie with id=1: ./reviews/create/1
    3. Enter in "Test" for the title, select "9" in the rating dropdown, and enter "This is a review." for the body.
    4. Click the "Submit button".
    5. Check database for newly created review.
Expected:
    1. Username will be displayed in the top menu.
    2. Create review page should appear.
    3. Review options should be filled out entirely.
    4. Review display page should appear.
    5. Review in database should have id=1, title = "Test", rating = "9", user_id = 1, movie_id = 1
       body = "This is a review.".
Actual:
    1. Username is displayed in top menu.
    2. Create review page is displayed.
    3. Review options are filled out.
    4. Review display page appears after clicking "Submit" button.
    5. Database contains review with id=1,title = "Test", rating = "9", user_id=1, movie_id=1,
       and body = "This is a review."

#####################
Req-ID: 113
Date: 4/16/2016
Status: Passed
Test: Tests that the review display page will show when it is accessed using a valid review id.

Actions:
    1. Ensure review exists in database with id=1.
    2. Navigate to display page through ./reviews/display/1.
Expected:
    1. Review with id=1 should be in database.
    2. Display review page for review id=1 is displayed.
Actual:
    1. Review with id=1 is in database.
    2. The display review page for review is=1 is displayed.

#####################
Req-ID: 114
Date: 4/16/2016
Status: Passed
Test: Tests that when a review is displayed, the display page shows the associated movie's title.

Actions:
    1. Ensure review exists in database with id=1, check review's movie_id.
    2. Navigate to display page through ./reviews/display/1.
    3. Check to see if the correct movie title is being displayed.
Expected:
    1. Review with id=1 should be in database. Review has movie_id n.
    2. Display review page for review id=1 is displayed.
    3. Title of movie with id = n is displayed on page.
Actual:
    1. Review with id=1 is in database. movie_id = 1.
    2. The display review page for review is=1 is displayed.
    3. "Fuga" is displayed, which matches the title for movie with id=1.

#####################
Req-ID: 115
Date: 4/16/2016
Status: Passed
Test: Tests that review title and review body are displayed on review display page.

Actions:
    1. Ensure review exists in database with id=1. Check review's title, and body contents.
    2. Navigate to display page through ./reviews/display/1.
    3. Ensure review title is displayed and review body is displayed.
Expected:
    1. Review with id=1 should be in database. The review title should be n, and body should be k.
    2. Display review page for review id=1 is displayed.
    3. Review title should display and be n, review body should be k.
Actual:
    1. Review with id=1 is in database. The review title is "Title", the review body is "Body".
    2. The display review page for review is=1 is displayed.
    3. The review title is displayed as "Title" and the review body is displayed as "Body".

#####################
Req-ID: 116
Date: 4/16/2016
Status: Passed
Test: Tests that review display page shows correct review rating using star images.

Actions:
    1. Ensure review exists in database with id=1. Check review rating.
    2. Navigate to display page through ./reviews/display/1.
    3. Ensure that rating is displayed using pictures of stars.
Expected:
    1. Review with id=1 should be in database. Rating = x.
    2. Display review page for review id=1 is displayed.
    3. X yellow stars should display on review display page.
Actual:
    1. Review with id=1 is in database. The rating is 1.
    2. The display review page for review is=1 is displayed.
    3. 1 yellow star appears on the review display page.

#####################
Req-ID: 118
Date: 4/16/2016
Status: Passed
Test: Tests whether the review display screen shows the username, avatar, and post date of the user who created it.

Actions:
    1. Ensure review exists in database with id=1. Check the review's created_at field. Check the associated user_id.
    2. Ensure user with matching user id exists in database. Check the user's username, and avatar.
    3. Navigate to display page through ./reviews/display/1.
    4. Ensure the username, and avatar displayed beside the review match the posting user.
    5. Ensure the time posted date below the username matches the time the review was posted.
Expected:
    1. Review with id=1 should be in database, created at field should equal n.
    2. User should be in database, username should be a, avatar should be k.
    3. Display review page for review id=1 is displayed.
    4. The username should display and be a, the avatar should match k.
    5. The time should be displayed at match n.
Actual:
    1. Review with id=1 is in database, user_id = 1.Review's created_at="2016-04-16 21:17:40".
    2. user with id=1 is in database. Has username "Chris", and a null avatar value.
    3. The display review page for review is=1 is displayed.
    4. Username is displayed as "Chris", default avatar is displayed.
    5. 2016-04-16 21:17:40 is displayed below the username.

#####################
Req-ID: 119
Date: 4/16/2016
Status: Passed
Test: The delete and edit review buttons are displayed when the user who created the review is logged in and displaying
        the review.
Actions:
    1. Ensure user is logged in and a review created by user exists.
    2. Navigate to display review page for the review, check that the delete and edit buttons display
        in the user section.
Expected:
    1. Username should appear at top menu, a review created by that user should be in the database.
    2. The edit and delete buttons should display when the review is displayed.
Actual:
    1. The username appears in the top menu. A review created by this user is in the database.
    2. The review display page has edit and delete buttons below user information.

#####################
Req-ID: 120
Date: 4/16/2016
Status: Passed
Test: The delete and edit review buttons should not display for any users other than the review creator or comment and
        review moderators.
Actions:
    1. Log in as a user. Ensure that there is a review in the database with user_id different from the user
        you are logged in as.
    2. Navigate to the review display page for that review, check to see if the edit and delete review buttons are
        displayed.
Expected:
    1. Username should appear at top menu bar. Review should be in database, user_id should not match yours.
    2. Edit and delete buttons should not appear on display review page.
Actual:
    1. Username is in top menu, review user_id = 1, my user_id=2.
    2. After navigating to the display review page, the edit and delete review buttons do not appear.

#####################
Req-ID: 121
Date: 4/17/2016
Status: Passed
Test: This tests that there is a comment button displayed on the review display page when the user is logged in, and
        that clicking the button loads the comment creation page.

Actions:
    1. Ensure review exists in database with id=1.
    2. Navigate to display page through ./reviews/display/1.
    3. Check for the comment button on the review display page.
    4. Click the comment button. Ensure the create comment page loads.
Expected:
    1. Review with id=1 should be in database.
    2. Display review page for review id=1 is displayed.
    3. There will be a comment button on the review display page.
    4. After clicking the comment button, the comment creation page will display.
Actual:
    1. Review with id=1 is in database.
    2. The display review page for review is=1 is displayed.
    3. The comment button is displayed on the review display page.
    4. After clicking the comment button, the comment creation page is displayed.

#####################
Req-ID: 122
Date: 4/17/2016
Status: Passed
Test: Tests that the comment button will only display when the user is logged in.

Actions:
    1. Make sure the user is not logged in.
    2. Ensure review exists in database with id=1.
    3. Navigate to display page through ./reviews/display/1.
    4. Check to see if comment button appears
Expected:
    1. Username will not appear in top menu.
    2. Review with id=1 should be in database.
    3. Display review page for review id=1 is displayed.
    4. Comment button should not appear on review display page
Actual:
    1. Username does not appear in top menu
    2. Review with id=1 is in database.
    3. The display review page for review is=1 is displayed.
    4. Comment button does not appear on review display page.

#####################
Req-ID: 123
Date: 4/17/2016
Status: Passed
Test: Tests that the review upvote and downvote buttons are displayed on the review display page.

Actions:
    1. Ensure review exists in database with id=1.
    2. Navigate to display page through ./reviews/display/1.
    3. Check that the upvote and downvote buttons are present on the review display page.
Expected:
    1. Review with id=1 should be in database.
    2. Display review page for review id=1 is displayed.
    3. The upvote and downvote buttons should appear on the review display page.
Actual:
    1. Review with id=1 is in database.
    2. The display review page for review is=1 is displayed.
    3. The upvote and downvote buttons appear on the review display page.

#####################
Req-ID: 124
Date: 4/17/2016
Status: Passed
Test: Tests that the review score is shown on the review display page.

Actions:
    1. Ensure review exists in database with id=1.
    2. Navigate to display page through ./reviews/display/1.
    3. Check that review score is shwon on the page.
Expected:
    1. Review with id=1 should be in database.
    2. Display review page for review id=1 is displayed.
    3. The review score appears on the page.
Actual:
    1. Review with id=1 is in database.
    2. The display review page for review is=1 is displayed.
    3. The review score appears on the page.

#####################
Req-ID: 125
Date: 4/17/2016
Status: Passed
Test: Tests that an popup comes up when the user is not logged in and attempts to upvote or downvote a post.

Actions:
    1. Make sure the user is not logged in.
    2. Ensure review exists in database with id=1.
    3. Navigate to display page through ./reviews/display/1.
    4. Click the upvote or downvote button and check for a popup on the screen.
Expected:
    1. Username will not appear in top menu.
    2. Review with id=1 should be in database.
    3. Display review page for review id=1 is displayed.
    4. After clicking the upvote or downvote button, a popup will be displayed on the screen.
Actual:
    1. Username does not appear in top menu
    2. Review with id=1 is in database.
    3. The display review page for review is=1 is displayed.
    4. A popup is displayed after clicking the upvote or downvote button.

#####################
Req-ID: 126
Date: 4/17/2016
Status: Passed
Test: Tests that the review's score is changed on the display page when the user is logged in and presses either the
        upvote or downvote button.

Actions:
    1. Make sure the user is logged in.
    2. Ensure review exists in database with id=1.
    3. Navigate to display page through ./reviews/display/1.
    4. Click the upvote or downvote button and check that the review score changes accordingly.
Expected:
    1. Username will appear in top menu.
    2. Review with id=1 should be in database.
    3. Display review page for review id=1 is displayed.
    4. After clicking the upvote or downvote button, the review score will change according to which button was clicked.
Actual:
    1. Username appears in top menu
    2. Review with id=1 is in database.
    3. The display review page for review is=1 is displayed.
    4. After clicking the upvote button, the score goes up. Clicking the downvote button makes the score go down.

#####################
Req-ID: 127
Date: 4/17/2016
Status: Passed
Test: Test that when a logged in user uses the upvote or downvote buttons on a review, the vote is recorded in the
        database.

Actions:
    1. Make sure the user is logged in.
    2. Ensure review exists in database with id=1.
    3. Navigate to display page through ./reviews/display/1.
    4. Click the upvote or downvote button.
    5. Check that the the vote for the correct user and review is recorded in the database.
Expected:
    1. Username will not appear in top menu.
    2. Review with id=1 should be in database.
    3. Display review page for review id=1 is displayed.
    4. Upvote button is clicked, review score reflects vote.
    5. The vote appears in the database, user_id is same as user, review_id is same as review, vote value is correct.
Actual:
    1. Username does not appear in top menu
    2. Review with id=1 is in database.
    3. The display review page for review is=1 is displayed.
    4. Upvote button is clicked, the review score goes up by 1.
    5. The vote appears in the database, user_id is same as user, review_id is same as review, vote value is correct.

#####################
Req-ID: 128
Date: 4/17/2016
Status: Passed
Test: Tests that when a vote button is clicked that has already been clicked, the database deletes the user's previous
        vote.

Actions:
    1. Make sure the user is logged in.
    2. Ensure review exists in database with id=1.
    3. Navigate to display page through ./reviews/display/1.
    4. Click the upvote button.
    5. Check that the the vote for the correct user and review is recorded in the database.
    6. Click the upvote button again.
    7. Check that the vote which was previously in the database has been deleted.
Expected:
    1. Username will not appear in top menu.
    2. Review with id=1 should be in database.
    3. Display review page for review id=1 is displayed.
    4. Upvote button is clicked, review score reflects vote.
    5. The vote appears in the database, user_id is same as user, review_id is same as review, vote value is correct.
    6. Clicking the upvote button again will cause the reviews score to go back down.
    7. The vote that was previously in the database is now deleted.
Actual:
    1. Username does not appear in top menu
    2. Review with id=1 is in database.
    3. The display review page for review is=1 is displayed.
    4. Upvote button is clicked, the review score goes up by 1.
    5. The vote appears in the database, user_id is same as user, review_id is same as review, vote value is correct.
    6. Clicking the upvote button again makes the review's score go back down.
    7. The vote is no longer present in the database.

#####################
Req-ID: 129
Date: 4/17/2016
Status: Passed
Test: Tests that comments associated with the review will display below the review on the review display page.

Actions:
    1. Ensure review exists in database with id=1.
    2. Navigate to display page through ./reviews/display/1.
    3. Ensure a comment with review_id = 1 is in the database.
    4. Check to see that the comment appears under the review on the review display page.
Expected:
    1. Review with id=1 should be in database.
    2. Display review page for review id=1 is displayed.
    3. A comment with review_id = 1 is in the database.
    4. The comment appears under the review on the review display page.
Actual:
    1. Review with id=1 is in database.
    2. The display review page for review is=1 is displayed.
    3. A comment with review_id = 1 is in the database.
    4. The comment appears under the review on the review display page.

#####################
Req-ID: 130
Date: 4/17/2016
Status: Passed
Test: Tests that comments display their comment body when they appear on the review page.

Actions:
    1. Ensure review exists in database with id=1.
    2. Navigate to display page through ./reviews/display/1.
    3. Ensure a comment with review_id = 1 is in the database. Make sure the comment has a body.
    4. Check to see that the comment appears under the review on the review display page, and that it displays its body.
Expected:
    1. Review with id=1 should be in database.
    2. Display review page for review id=1 is displayed.
    3. A comment with review_id = 1 is in the database. It has body = n.
    4. The comment appears under the review on the review display page. It displays body = n.
Actual:
    1. Review with id=1 is in database.
    2. The display review page for review is=1 is displayed.
    3. A comment with review_id = 1 is in the database. It has body 'Hello'.
    4. The comment appears under the review on the review display page. It displays the body "Hello".

#####################
Req-ID: 131
Date: 4/17/2016
Status: Passed
Test: Test that comments show a user information section when they are displayed.

Actions:
    1. Ensure review exists in database with id=1.
    2. Navigate to display page through ./reviews/display/1.
    3. Ensure a comment with review_id = 1 is in the database.
    4. Check to see that the comment appears under the review on the review display page, and that it displays a user
        information section.
Expected:
    1. Review with id=1 should be in database.
    2. Display review page for review id=1 is displayed.
    3. A comment with review_id = 1 is in the database.
    4. The comment appears under the review on the review display page. It displays body a user information section.
Actual:
    1. Review with id=1 is in database.
    2. The display review page for review is=1 is displayed.
    3. A comment with review_id = 1 is in the database. It has body 'Hello'.
    4. The comment appears under the review on the review display page. It displays a user information section.

#####################
Req-ID: 132
Date: 4/17/2016
Status: Passed
Test: Tests that edit and delete buttons show up on comments for the user who created them.

Actions:
    1. Ensure review exists in database with id=1.
    2. Navigate to display page through ./reviews/display/1.
    3. Ensure a comment with review_id = 1 is in the database.
    4. Ensure you are logged in as the user who created the comment.
    5. Check for the edit and delete buttons appearing on the comment.
Expected:
    1. Review with id=1 should be in database.
    2. Display review page for review id=1 is displayed.
    3. A comment with review_id = 1 is in the database.
    4. User is logged in, username will appear in top menu.
    5. Edit and delete buttons appear on comment.
Actual:
    1. Review with id=1 is in database.
    2. The display review page for review is=1 is displayed.
    3. A comment with review_id = 1 is in the database. It has body 'Hello'.
    4. User is logged in and username appears in top menu.
    5. The edit and delete buttons appear on the comment.

#####################
Req-ID: 133
Date: 4/17/2016
Status: Passed
Test: Tests that edit and delete buttons do not show up on comments that the logged in user did not create.

Actions:
    1. Ensure review exists in database with id=1.
    2. Navigate to display page through ./reviews/display/1.
    3. Ensure a comment with review_id = 1 is in the database.
    4. Ensure you are logged in as a user who did not create the comment.
    5. Check that the edit and delete buttons do not appear on the comment.
Expected:
    1. Review with id=1 should be in database.
    2. Display review page for review id=1 is displayed.
    3. A comment with review_id = 1 is in the database.
    4. User is logged in, username will appear in top menu.
    5. Edit and delete buttons will not appear on comment.
Actual:
    1. Review with id=1 is in database.
    2. The display review page for review is=1 is displayed.
    3. A comment with review_id = 1 is in the database. It has body 'Hello'.
    4. User is logged in and username appears in top menu.
    5. The edit and delete buttons do not appear on the comment.

#####################
Req-ID: 134
Date: 4/17/2016
Status: Passed
Test: Tests that when the delete button for a review is clicked, the review is deleted from the database and
        the page refreshes.

Actions:
    1. Ensure review exists in database with id=1.
    2. Navigate to display page through ./reviews/display/1.
    3. Ensure you are logged in as user who created review.
    4. Click delete button on the review.
    5. Check that review is removed from database.
    6. Check that page refreshes.
Expected:
    1. Review with id=1 should be in database.
    2. Display review page for review id=1 is displayed.
    3. Username will appear in top menu.
    4. Delete button will trigger delete popup.
    5. The review will no longer be in the database.
    6. The page refreshes.
Actual:
    1. Review with id=1 is in database.
    2. The display review page for review is=1 is displayed.
    3. The username appears in the top menu.
    4. The delete button triggers a popup.
    5. The review is no longer in the database.
    6. The page refreshes.

#####################
Req-ID: 138
Date: 4/17/2016
Status: Passed
Test: Tests that when a review is deleted, so are the related comments and votes.

Actions:
    1. Ensure review exists in database with id=1.
    2. Navigate to display page through ./reviews/display/1.
    3. Ensure you are logged in as user who created review.
    4. Ensure there is a vote and a comment pretaining to the review in the database.
    5. Delete the review. Check that it is no longer in the database.
    6. Check that the associated vote and comment are no longer in the database.
Expected:
    1. Review with id=1 should be in database.
    2. Display review page for review id=1 is displayed.
    3. Username will appear in top menu.
    4. There is a vote and a comment associated with the review in the database.
    5. After being deleted, the review no longer appears in the database.
    6. The associated vote and comment are no longer in the database.
Actual:
    1. Review with id=1 is in database.
    2. The display review page for review is=1 is displayed.
    3. The username appears in the top menu.
    4. There is a vote and comment associated with the review in the database.
    5. After being deleted, the review no longer appears in the database.
    6. The associated vote and comment are no longer in the database.

#####################
Req-ID: 135
Date: 4/16/2016
Status:
Test: Tests that when a user tries to create a review for a movie that does not exist, the movie not found page is
        displayed.

Actions:
    1. Ensure there is no movie with id = 1 in database.
    2. Navigate to ./reviews/create/1.
Expected:
    1. There is no movie in the database with id = 1.
    2. The movie not found page loads.
Actual:
    1. There is no movie in the database with id = 1.
    2. The movie not found page loads.

#####################
Req-ID: 136
Date: 4/16/2016
Status:
Test: Tests that when a user tries to display a review that does not exist, the review not found page is displayed.

Actions:
    1. Ensure there is no review with id = 1 in database.
    2. Navigate to ./reviews/display/1.
Expected:
    1. There is no review in the database with id = 1.
    2. The review not found page loads.
Actual:
    1. There is no review in the database with id = 1.
    2. The review not found page loads.

#####################
Req-ID: 137
Date: 4/17/2016
Status: Passed
Test: Tests that a user can only create one review per movie.

Actions:
    1. Ensure review exists in database with id=1.
    2. Log in as user who created review.
    3. Navigate to ./reviews/create/1.
Expected:
    1. Review with id=1 should be in database.
    2. Username should appear in top menu.
    3. User should be rerouted to display review page.
Actual:
    1. Review with id=1 is in database.
    2. Username appears in top menu.
    3. User is routed to display review page.
